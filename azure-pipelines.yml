variables:
  GIT_LFS_VERSION: "2.6.0"

resources:
  repositories:
    - repository: self
      checkoutOptions:
        submodules: true

jobs:
  - job: Ubuntu
    displayName: "Ubuntu Linux (AMD64)"
    pool:
      vmImage: ubuntu-16.04
    variables:
      TARGET_PLATFORM: ubuntu
      GIT_LFS_CHECKSUM: 43e9311bdded82d43c574b075aafaf56681a3450c1ccf59cce9d362acabf1362
    steps:
      - script: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends gettext
        displayName: Install dependencies
      - script: script/build.sh
        displayName: Build
      - script: script/package.sh
        displayName: Package
      - task: CopyFiles@2
        inputs:
          contents: |
            output/*.tar.gz
            output/*.lzma
            output/*.sha256
          targetFolder: $(Build.ArtifactStagingDirectory)
          flattenFolders: true
      - task: PublishBuildArtifacts@1

  - job: Linux_ARM64
    displayName: "Linux (arm64)"
    pool:
      vmImage: "ubuntu-16.04"
    variables:
      TARGET_PLATFORM: arm64
      GIT_LFS_CHECKSUM: 574192d485ce84495fe3f228a57e3ef80f93635ae4677ac4a189425b4c9aeb0a
    steps:
      - script: docker run --rm --privileged multiarch/qemu-user-static:register --reset
        displayName: "Register Docker QEMU"
      - task: docker@0
        displayName: "Build Git in container"
        inputs:
          action: "Run an image"
          imageName: shiftkey/dugite-native:arm64-jessie-git
          volumes: |
            $(Build.SourcesDirectory):/src
            $(Build.SourcesDirectory)/build/git:/output
          envVars: |
            SOURCE=/src/git
            DESTINATION=/output
          workDir: /src
          containerCommand: "sh /src/script/arm64/build-git.sh"
          detached: false
      - bash: script/arm64/bundle-git-lfs.sh
        displayName: "Bundle Git LFS"
        env:
          DESTINATION: $(Build.SourcesDirectory)/build/git
      - task: docker@0
        displayName: Verify Git LFS in container
        inputs:
          action: "Run an image"
          imageName: shiftkey/dugite-native:arm64-jessie-git
          volumes: |
            $(Build.SourcesDirectory):/src
            $(Build.SourcesDirectory)/build/git:/output
          envVars: |
            DESTINATION=/output
          workDir: /src
          containerCommand: "sh /src/script/arm64/verify-git-lfs.sh"
          detached: false
      - bash: script/arm64/verify-git.sh
        displayName: "Verify Git"
        env:
          DESTINATION: $(Build.SourcesDirectory)/build/git
      - bash: script/arm64/package.sh
        displayName: Package
        env:
          SOURCE: $(Build.SourcesDirectory)/git
          DESTINATION: $(Build.SourcesDirectory)/build/git
      - task: CopyFiles@2
        inputs:
          contents: |
            output/*.tar.gz
            output/*.lzma
            output/*.sha256
          targetFolder: $(Build.ArtifactStagingDirectory)
          flattenFolders: true
      - task: PublishBuildArtifacts@1

  - job: macOS
    pool:
      vmImage: xcode9-macos10.13
    variables:
      TARGET_PLATFORM: macOS
      GIT_LFS_CHECKSUM: 42bf89b9775a69ab7dbe65847e174fe802d54ce6ed0d553bd497c740f2803f60
    steps:
      - bash: script/build.sh
        displayName: Build
      - bash: script/package.sh
        displayName: Package
      - task: CopyFiles@2
        inputs:
          contents: |
            output/*.tar.gz
            output/*.lzma
            output/*.sha256
          targetFolder: $(Build.ArtifactStagingDirectory)
          flattenFolders: true
      - task: PublishBuildArtifacts@1

  - job: Windows_64bit
    displayName: "Windows (64-bit)"
    pool:
      vmImage: vs2017-win2016
    variables:
      TARGET_PLATFORM: win32
      WIN_ARCH: 64
      GIT_LFS_CHECKSUM: f1312d00e435c16c8d19d914d5108db6a5ddbee1badb214c66f22cfa5d18b279
      GIT_FOR_WINDOWS_URL: https://github.com/git-for-windows/git/releases/download/v2.19.1.windows.1/MinGit-2.19.1-64-bit.zip
      GIT_FOR_WINDOWS_CHECKSUM: f89e103a41bda8e12efeaab198a8c20bb4a84804683862da518ee2cb66a5a5b3
    steps:
      - script: |
          choco install 7zip
        displayName: Install dependencies
      - bash: script/build.sh
        displayName: Build
      - bash: script/package.sh
        displayName: Package
      - task: CopyFiles@2
        inputs:
          contents: |
            output/*.tar.gz
            output/*.lzma
            output/*.sha256
          targetFolder: $(Build.ArtifactStagingDirectory)
          flattenFolders: true
      - task: PublishBuildArtifacts@1

  - job: Windows_32bit
    displayName: "Windows (32-bit)"
    pool:
      vmImage: vs2017-win2016
    variables:
      TARGET_PLATFORM: win32
      WIN_ARCH: 32
      GIT_LFS_CHECKSUM: 7fa3475c60221837860138b4fd0fd0ad1213a5e49c596fdb0aac8932ca7a20a5
      GIT_FOR_WINDOWS_URL: https://github.com/git-for-windows/git/releases/download/v2.19.1.windows.1/MinGit-2.19.1-32-bit.zip
      GIT_FOR_WINDOWS_CHECKSUM: 9bde728fe03f66a022b3e41408902ccfceb56a34067db1f35d6509375b9be922
    steps:
      - script: |
          choco install 7zip
        displayName: Install dependencies
      - bash: script/build.sh
        displayName: Build
      - bash: script/package.sh
        displayName: Package
      - task: CopyFiles@2
        inputs:
          contents: |
            output/*.tar.gz
            output/*.lzma
            output/*.sha256
          targetFolder: $(Build.ArtifactStagingDirectory)
          flattenFolders: true
      - task: PublishBuildArtifacts@1
